name: Build and Release AutoMuter

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: windows-latest
    concurrency: release
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=auto_muter --cov-report=xml  # Run tests and generate coverage report

      - name: Check coverage threshold
        run: |
          COVERAGE=$(pytest --cov=auto_muter --cov-report=term-missing | tee)  # Capture the output
          COVERAGE_PERCENTAGE=$(echo "$COVERAGE" | grep -oP '\d+\.\d+(?=%)' | tail -n 1)  # Extract percentage
          echo "Test coverage: $COVERAGE_PERCENTAGE%"
          if (( $(echo "$COVERAGE_PERCENTAGE < 80" | bc -l) )); then  # Set your threshold (80% here)
            echo "Coverage is below threshold! Failing the build.";
            exit 1;  # Fail the build if coverage is below threshold
          fi

      - name: Python Semantic Release
        id: semantic-release
        run: |
          semantic-release version
          semantic-release publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current version
        id: get_version
        run: |
          $version = poetry version -s
          echo "VERSION=$version" >> $env:GITHUB_ENV
          echo "Current version: $version"

      - name: Build + Package
        run: poetry run build_and_package
        working-directory: ${{ github.workspace }}  # default, just explicit

      - name: Upload artifact to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          files: AutoMuter-v${{ env.VERSION }}.zip
