name: Build and Release AutoMuter

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: windows-latest
    concurrency: release
    permissions:
      contents: write           # Required to push commits and tags
      id-token: write           # Required for GitHub release creation
      pull-requests: write      # Allow interaction with PRs
      issues: write             # Allow interaction with issues

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run tests with coverage
        run: |
          $result = pytest --cov=auto_muter --cov-report=term-missing
          $coverage_line = $result | Select-String -Pattern "TOTAL"
          $coverage_value = ($coverage_line -split "\s+")[3]

          # Remove '%' if present and convert to float
          $coverage_percentage = $coverage_value -replace '%', ''
          $coverage_percentage = [float]$coverage_percentage

          Write-Host "Coverage Percentage: $coverage_percentage"

          # Check if coverage is below the threshold (75%)
          if ($coverage_percentage -lt 75) {
              Write-Error "Coverage is below threshold. Coverage: $coverage_percentage%"
              exit 1
          }
        shell: pwsh

      - name: Python Semantic Release
        id: semantic-release
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull --all
          semantic-release version --github-token "${{ secrets.GITHUB_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # - name: Get current version
      #   id: get_version
      #   run: |
      #     git pull --all
      #     $version = $(git tag -l --sort=version:refname | tail -n 1)
      #     echo "VERSION=$version" >> $env:GITHUB_ENV
      #     echo "Current version: $version"

      - name: Build + Package
        run: poetry run build_and_package
        working-directory: ${{ github.workspace }}  # default, just explicit

      - name: Upload artifact to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.semantic-release.outputs.new_release_version }}
          files: AutoMuter-v${{ steps.semantic-release.outputs.new_release_version }}.zip
